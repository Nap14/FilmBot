# Generated by Django 4.1.7 on 2023-03-28 11:56

from django.db import migrations, models
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Dubbing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Profession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="MovieMaker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("external_id", models.IntegerField(unique=True)),
                ("name", models.CharField(max_length=255)),
                ("original_name", models.CharField(max_length=255, null=True)),
                ("birth_date", models.DateField(default=None, null=True)),
                (
                    "profession",
                    models.ManyToManyField(
                        default=3, related_name="workers", to="db.profession"
                    ),
                ),
            ],
            options={
                "verbose_name": "movie_maker",
                "verbose_name_plural": "movie_makers",
            },
        ),
        migrations.CreateModel(
            name="Film",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("external_id", models.IntegerField(unique=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "original_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("poster", models.URLField(blank=True, max_length=500, null=True)),
                ("description", models.TextField()),
                ("country", django_countries.fields.CountryField(max_length=2)),
                ("trailer", models.URLField(blank=True, max_length=500, null=True)),
                ("release", models.DateField(default=None, null=True)),
                ("rating", models.FloatField()),
                ("time", models.IntegerField()),
                ("age_limit", models.IntegerField(null=True)),
                (
                    "actors",
                    models.ManyToManyField(related_name="films", to="db.moviemaker"),
                ),
                (
                    "directors",
                    models.ManyToManyField(related_name="projects", to="db.moviemaker"),
                ),
                ("dubbing", models.ManyToManyField(to="db.dubbing")),
                ("genres", models.ManyToManyField(to="db.genre")),
            ],
            options={
                "default_related_name": "films",
            },
        ),
    ]
